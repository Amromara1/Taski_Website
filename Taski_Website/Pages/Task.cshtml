@page
@model Taski_Website.Pages.TaskModel
@{
    ViewData["Title"] = "Task";
}
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="styles.css" />
    <title>Taski Task</title>
</head>
<body>

    <div class="grid-container">
        <div class="top-part">
            <div class="logo">Your Logo</div>
            <div class="greeting">Hello</div>
        </div>

        <div class="middle-part" id="taskList">
            @foreach (var task in Model.Tasks)
            {
                <div class="task-item-container">
                    <form method="post" asp-page-handler="Delete">
                        <button class="btn btn-danger" type="submit" name="TaskId" value=@task.TaskId>X</button>
                    </form>
                    <div class="task-item" data-taskid="@task.TaskId" data-title="@task.TaskName" data-description="@task.TaskDescription" data-dueDate="@task.DueDate.ToString("yyyy-MM-dd")">
                        <span class="task-name">@task.TaskName</span>
                    </div>
                </div>
            }
            <button class="add-task-button">Add New Task</button>
        </div>

        <div class="form-container" >
        <form method="post" asp-page-handler="OnPostAsync" class="col-9">
            <div class="form-group">
                <label for="title">Title</label>
                <input type="text" id="title" asp-for="Title" class="form-control teams-input" />
                <span asp-validation-for="Title" class="teams-error"></span>
            </div>

            <div class="form-group">
                <label for="description">Description</label>
                    <textarea id="description" asp-for="Description" class="form-control teams-input teams-desc"></textarea>
                <span asp-validation-for="Description" class="teams-error"></span>
            </div>

            <div class="form-group">
                <label for="dueDate">Due Date</label>
                <input type="date" id="dueDate" asp-for="DueDate" class="form-control teams-input" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="DueDate" class="teams-error"></span>
            </div>

            <div class="teams-actions">
                <button class="teams-button create-button btn btn-primary">Finish</button>
                <!-- Add your delete button here if needed -->
            </div>
        </form>
        </div>
    </div>



    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get task list and details elements
            const taskList = document.getElementById('taskList');
            const titleInput = document.getElementById('title');
            const descriptionInput = document.getElementById('description');
            const dueDateInput = document.getElementById('dueDate');
            const taskIdInput = document.getElementById('taskId');

            // Add click event listener to task items
            taskList.addEventListener('click', function (event) {
                const selectedTask = event.target;
                if (selectedTask.classList.contains('task-item')) {
                    // Highlight the selected task (optional)
                    Array.from(taskList.getElementsByClassName('task-item')).forEach(item => {
                        item.classList.remove('selected');
                    });
                    selectedTask.classList.add('selected');

                    // Get task information based on data attributes
                    const taskId = selectedTask.getAttribute('data-taskid');
                    const title = selectedTask.getAttribute('data-title');
                    const description = selectedTask.getAttribute('data-description');
                    const dueDate = selectedTask.getAttribute('data-dueDate');

                    // Use the retrieved information as needed
                    titleInput.value = title;
                    descriptionInput.value = description;
                    dueDateInput.value = dueDate;
                    taskIdInput.value = taskId;
                }
            });
            // Add click event listener to "Add New Task" button
            const addTaskButton = document.querySelector('.add-task-button');
            addTaskButton.addEventListener('click', function () {
                // Clear the input fields
                titleInput.value = '';
                descriptionInput.value = '';
                dueDateInput.value = '';
                taskIdInput.value = '';

                // Remove the 'selected' class from all task items
                Array.from(taskList.getElementsByClassName('task-item')).forEach(item => {
                    item.classList.remove('selected');
                });
            });
        });



    </script>

</body>
</html>