@page
@model Taski_Website.Pages.TaskModel
@{
    ViewData["Title"] = "Task";
}
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="styles.css" />
    <title>Taski Task</title>
</head>
<body>

    <!-- Grid Layout -->
    <div class="grid-container">
        <!-- Top Part -->
        <div class="top-part">
            <div class="logo">Your Logo</div>
            <div class="greeting">Hello</div>
        </div>

        <!-- left Part -->
        <!-- Left Part (Task List) -->
        <div class="middle-part" id="taskList">
            <!-- List items will be dynamically added here -->
            @foreach (var task in Model.Tasks)
            {
                <div class="task-item" data-taskid="@task.TaskId" data-title="@task.TaskName" data-description="@task.TaskDescription" data-dueDate="@task.DueDate.ToString("yyyy-MM-dd")">
                    @task.TaskName
                </div>
            }
            <button class="add-task-button">Add New Task</button>
        </div>

        <!-- middle Part -->
        <div class="task-details">
            <label for="title">Title</label>
            <input type="text" id="title" />

            <label for="description">Description</label>
            <input type="text" id="description" />

            <label for="dueDate">Due Date</label>
            <input type="text" id="dueDate" />

            <button class="create-button">Create</button>
        </div>
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get task list and details elements
            const taskList = document.getElementById('taskList');
            const titleInput = document.getElementById('title');
            const descriptionInput = document.getElementById('description');
            const dueDateInput = document.getElementById('dueDate');

            // Add click event listener to task items
            taskList.addEventListener('click', function (event) {
                const selectedTask = event.target;
                if (selectedTask.classList.contains('task-item')) {
                    // Highlight the selected task (optional)
                    Array.from(taskList.getElementsByClassName('task-item')).forEach(item => {
                        item.classList.remove('selected');
                    });
                    selectedTask.classList.add('selected');

                    // Get task information based on data attributes
                    const taskId = selectedTask.getAttribute('data-taskid');
                    const title = selectedTask.getAttribute('data-title');
                    const description = selectedTask.getAttribute('data-description');
                    const dueDate = selectedTask.getAttribute('data-dueDate');

                    // Use the retrieved information as needed
                    titleInput.value = title;
                    descriptionInput.value = description;
                    dueDateInput.value = dueDate;
                }
            });
        });
    </script>

</body>
</html>